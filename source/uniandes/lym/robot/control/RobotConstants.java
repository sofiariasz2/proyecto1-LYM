/* Generated By:JavaCC: Do not edit this line. RobotConstants.java */
package uniandes.lym.robot.control;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface RobotConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int LETTER = 5;
  /** RegularExpression Id. */
  int DIGIT = 6;
  /** RegularExpression Id. */
  int MOVE = 7;
  /** RegularExpression Id. */
  int TURN = 8;
  /** RegularExpression Id. */
  int FACE = 9;
  /** RegularExpression Id. */
  int PUT = 10;
  /** RegularExpression Id. */
  int PICK = 11;
  /** RegularExpression Id. */
  int POP = 12;
  /** RegularExpression Id. */
  int GOTO = 13;
  /** RegularExpression Id. */
  int JUMP = 14;
  /** RegularExpression Id. */
  int NOP = 15;
  /** RegularExpression Id. */
  int PROC = 16;
  /** RegularExpression Id. */
  int ASSIGN = 17;
  /** RegularExpression Id. */
  int IF = 18;
  /** RegularExpression Id. */
  int THEN = 19;
  /** RegularExpression Id. */
  int ELSE = 20;
  /** RegularExpression Id. */
  int WHILE = 21;
  /** RegularExpression Id. */
  int DO = 22;
  /** RegularExpression Id. */
  int FOR = 23;
  /** RegularExpression Id. */
  int INDIR = 24;
  /** RegularExpression Id. */
  int TOTHE = 25;
  /** RegularExpression Id. */
  int OFTYPE = 26;
  /** RegularExpression Id. */
  int REPEAT_BLOCK = 27;
  /** RegularExpression Id. */
  int ID = 28;
  /** RegularExpression Id. */
  int CONSTANT = 29;
  /** RegularExpression Id. */
  int BALLOONS = 30;
  /** RegularExpression Id. */
  int CHIPS = 31;
  /** RegularExpression Id. */
  int BACK = 32;
  /** RegularExpression Id. */
  int FRONT = 33;
  /** RegularExpression Id. */
  int LEFT = 34;
  /** RegularExpression Id. */
  int RIGHT = 35;
  /** RegularExpression Id. */
  int AROUND = 36;
  /** RegularExpression Id. */
  int NORTH = 37;
  /** RegularExpression Id. */
  int SOUTH = 38;
  /** RegularExpression Id. */
  int WEST = 39;
  /** RegularExpression Id. */
  int EAST = 40;
  /** RegularExpression Id. */
  int NUM = 41;
  /** RegularExpression Id. */
  int CANMOVE = 42;
  /** RegularExpression Id. */
  int FACING = 43;
  /** RegularExpression Id. */
  int CANPUT = 44;
  /** RegularExpression Id. */
  int CANPICK = 45;
  /** RegularExpression Id. */
  int CANJUMP = 46;
  /** RegularExpression Id. */
  int NOT = 47;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\r\"",
    "\"\\t\"",
    "\"\\n\"",
    "<LETTER>",
    "<DIGIT>",
    "\"move\"",
    "\"turn\"",
    "\"face\"",
    "\"put\"",
    "\"pick\"",
    "\"pop\"",
    "\"goto\"",
    "\"jump\"",
    "\"nop\"",
    "\"proc\"",
    "\":=\"",
    "\"if:\"",
    "\"then:\"",
    "\"else:\"",
    "\"while:\"",
    "\"do:\"",
    "\"for:\"",
    "\"inDir:\"",
    "\"toThe:\"",
    "\"ofType:\"",
    "\"repeat:\"",
    "<ID>",
    "<CONSTANT>",
    "\"#balloons\"",
    "\"#chips\"",
    "\"#back\"",
    "\"#front\"",
    "\"#left\"",
    "\"#right\"",
    "\"#around\"",
    "\"#north\"",
    "\"#south\"",
    "\"#west\"",
    "\"#east\"",
    "<NUM>",
    "\"canMove:\"",
    "\"facing:\"",
    "\"canPut:\"",
    "\"canPick:\"",
    "\"canJump:\"",
    "\"not:\"",
    "\":\"",
    "\".\"",
    "\"with:\"",
    "\"[\"",
    "\"]\"",
    "\",\"",
  };

}
